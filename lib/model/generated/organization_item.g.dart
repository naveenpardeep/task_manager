//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// Организации
class OrganizationItemGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameName = 'name';
  static const nameDateCreated = 'dateCreated';
  static const namePhotoPath = 'photoPath';
  static const namePhotoFile = 'photoFile';
  static const nameCEOId = 'ceoId';
  static const nameTableUsers = 'tableUsers';

  static final Map<String, String> fieldNameDict = {
    nameName: 'Наименование',
    nameDateCreated: 'Дата создания',
    nameCEOId: 'Руководитель',
  };

  @override
  String get typeName => 'OrganizationItem';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataStringField(nameName), primaryKey: false);
    addField(NsgDataDateField(nameDateCreated), primaryKey: false);
    addField(NsgDataStringField(namePhotoPath), primaryKey: false);
    addField(NsgDataBinaryField(namePhotoFile), primaryKey: false);
    addField(NsgDataReferenceField<UserAccount>(nameCEOId), primaryKey: false);
    addField(NsgDataReferenceListField<OrganizationItemUserTable>(nameTableUsers), primaryKey: false);
    fieldList.fields[nameName]?.presentation = 'Наименование';
    fieldList.fields[nameDateCreated]?.presentation = 'Дата создания';
    fieldList.fields[nameCEOId]?.presentation = 'Руководитель';
  }

  @override
  String toString() => name;

  @override
  bool get createOnServer => true;

  @override
  NsgDataItem getNewObject() => OrganizationItem();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// Наименование
  String get name => getFieldValue(nameName).toString();

  set name(String value) => setFieldValue(nameName, value);

  /// ДатаСоздания
  DateTime get dateCreated => getFieldValue(nameDateCreated) as DateTime;

  set dateCreated(DateTime value) => setFieldValue(nameDateCreated, value);

  /// КартинкаПуть
  String get photoPath => getFieldValue(namePhotoPath).toString();

  set photoPath(String value) => setFieldValue(namePhotoPath, value);

  /// Картинка
  List<int> get photoFile {
    return getFieldValue(namePhotoFile) as List<int>;
  }

  set photoFile(List<int> value) => setFieldValue(namePhotoFile, value);

  /// Руководитель
  String get ceoId => getFieldValue(nameCEOId).toString();
  UserAccount get ceo => getReferent<UserAccount>(nameCEOId);
  Future<UserAccount> ceoAsync() async {
   return await getReferentAsync<UserAccount>(nameCEOId);
  }

  set ceoId(String value) => setFieldValue(nameCEOId, value);
  set ceo(UserAccount value) =>
    setFieldValue(nameCEOId, value.id);

  /// Сотрудники
  NsgDataTable<OrganizationItemUserTable> get tableUsers => NsgDataTable<OrganizationItemUserTable>(owner: this, fieldName: nameTableUsers);


  @override
  String get apiRequestItems {
    return '/Data/Organization';
  }
}
