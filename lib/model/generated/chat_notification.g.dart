//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// УведомлениеЧата
class ChatNotificationGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameDate = 'date';
  static const nameDateFirstMessage = 'dateFirstMessage';
  static const nameDateLastMessage = 'dateLastMessage';
  static const nameTaskId = 'taskId';
  static const nameNewMessagesCount = 'newMessagesCount';
  static const nameOrganizationId = 'organizationId';
  static const nameUserId = 'userId';
  static const nameProjectId = 'projectId';

  static final Map<String, String> fieldNameDict = {
    nameDate: 'Дата документа',
  };

  @override
  String get typeName => 'ChatNotification';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataDateField(nameDate), primaryKey: false);
    addField(NsgDataDateField(nameDateFirstMessage), primaryKey: false);
    addField(NsgDataDateField(nameDateLastMessage), primaryKey: false);
    addField(NsgDataReferenceField<TaskDoc>(nameTaskId), primaryKey: false);
    addField(NsgDataIntField(nameNewMessagesCount), primaryKey: false);
    addField(NsgDataReferenceField<OrganizationItem>(nameOrganizationId), primaryKey: false);
    addField(NsgDataReferenceField<UserAccount>(nameUserId), primaryKey: false);
    addField(NsgDataReferenceField<ProjectItem>(nameProjectId), primaryKey: false);
    fieldList.fields[nameDate]?.presentation = 'Дата документа';
  }

  @override
  NsgDataItem getNewObject() => ChatNotification();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// ДатаДокумента
  DateTime get date => getFieldValue(nameDate) as DateTime;

  set date(DateTime value) => setFieldValue(nameDate, value);

  /// ДатаПервого
  DateTime get dateFirstMessage => getFieldValue(nameDateFirstMessage) as DateTime;

  set dateFirstMessage(DateTime value) => setFieldValue(nameDateFirstMessage, value);

  /// ДатаПоследнего
  DateTime get dateLastMessage => getFieldValue(nameDateLastMessage) as DateTime;

  set dateLastMessage(DateTime value) => setFieldValue(nameDateLastMessage, value);

  /// Задача
  String get taskId => getFieldValue(nameTaskId).toString();
  TaskDoc get task => getReferent<TaskDoc>(nameTaskId);
  Future<TaskDoc> taskAsync() async {
   return await getReferentAsync<TaskDoc>(nameTaskId);
  }

  set taskId(String value) => setFieldValue(nameTaskId, value);
  set task(TaskDoc value) =>
    setFieldValue(nameTaskId, value.id);

  /// КолВоНепрочитанных
  int get newMessagesCount => getFieldValue(nameNewMessagesCount) as int;

  set newMessagesCount(int value) => setFieldValue(nameNewMessagesCount, value);

  /// Организация
  String get organizationId => getFieldValue(nameOrganizationId).toString();
  OrganizationItem get organization => getReferent<OrganizationItem>(nameOrganizationId);
  Future<OrganizationItem> organizationAsync() async {
   return await getReferentAsync<OrganizationItem>(nameOrganizationId);
  }

  set organizationId(String value) => setFieldValue(nameOrganizationId, value);
  set organization(OrganizationItem value) =>
    setFieldValue(nameOrganizationId, value.id);

  /// Пользователь
  String get userId => getFieldValue(nameUserId).toString();
  UserAccount get user => getReferent<UserAccount>(nameUserId);
  Future<UserAccount> userAsync() async {
   return await getReferentAsync<UserAccount>(nameUserId);
  }

  set userId(String value) => setFieldValue(nameUserId, value);
  set user(UserAccount value) =>
    setFieldValue(nameUserId, value.id);

  /// Проект
  String get projectId => getFieldValue(nameProjectId).toString();
  ProjectItem get project => getReferent<ProjectItem>(nameProjectId);
  Future<ProjectItem> projectAsync() async {
   return await getReferentAsync<ProjectItem>(nameProjectId);
  }

  set projectId(String value) => setFieldValue(nameProjectId, value);
  set project(ProjectItem value) =>
    setFieldValue(nameProjectId, value.id);

  @override
  String get apiRequestItems {
    return '/Data/ChatNotification';
  }
}
