//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// БизнесПроцесс
class BusinessProcessGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameName = 'name';
  static const nameProjectId = 'projectId';
  static const nameStatusFromId = 'statusFromId';
  static const nameTransitionTable = 'transitionTable';

  static final Map<String, String> fieldNameDict = {
  };

  @override
  String get typeName => 'BusinessProcess';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataStringField(nameName), primaryKey: false);
    addField(NsgDataReferenceField<ProjectItem>(nameProjectId), primaryKey: false);
    addField(NsgDataReferenceField<TaskStatus>(nameStatusFromId), primaryKey: false);
    addField(NsgDataReferenceListField<BusinessProcessTransitionTable>(nameTransitionTable), primaryKey: false);
  }

  @override
  String toString() => name;

  @override
  NsgDataItem getNewObject() => BusinessProcess();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// Наименование
  String get name => getFieldValue(nameName).toString();

  set name(String value) => setFieldValue(nameName, value);

  /// Владелец
  String get projectId => getFieldValue(nameProjectId).toString();
  ProjectItem get project => getReferent<ProjectItem>(nameProjectId);
  Future<ProjectItem> projectAsync() async {
   return await getReferentAsync<ProjectItem>(nameProjectId);
  }

  set projectId(String value) => setFieldValue(nameProjectId, value);
  set project(ProjectItem value) =>
    setFieldValue(nameProjectId, value.id);

  /// НачальныйСтатус
  String get statusFromId => getFieldValue(nameStatusFromId).toString();
  TaskStatus get statusFrom => getReferent<TaskStatus>(nameStatusFromId);
  Future<TaskStatus> statusFromAsync() async {
   return await getReferentAsync<TaskStatus>(nameStatusFromId);
  }

  set statusFromId(String value) => setFieldValue(nameStatusFromId, value);
  set statusFrom(TaskStatus value) =>
    setFieldValue(nameStatusFromId, value.id);

  /// Переходы
  NsgDataTable<BusinessProcessTransitionTable> get transitionTable => NsgDataTable<BusinessProcessTransitionTable>(owner: this, fieldName: nameTransitionTable);


  @override
  String get apiRequestItems {
    return '/Data/BusinessProcess';
  }
}
