//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// БизнесПроцесс.Переходы
class BusinessProcessTransitionTableGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameOwnerId = 'ownerId';
  static const nameStatusFromId = 'statusFromId';
  static const nameStatusToId = 'statusToId';
  static const nameUserRoleId = 'userRoleId';

  static final Map<String, String> fieldNameDict = {
  };

  @override
  String get typeName => 'BusinessProcessTransitionTable';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataReferenceField<BusinessProcess>(nameOwnerId), primaryKey: false);
    addField(NsgDataReferenceField<TaskStatus>(nameStatusFromId), primaryKey: false);
    addField(NsgDataReferenceField<TaskStatus>(nameStatusToId), primaryKey: false);
    addField(NsgDataReferenceField<UserRole>(nameUserRoleId), primaryKey: false);
  }

  @override
  NsgDataItem getNewObject() => BusinessProcessTransitionTable();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// Владелец
  @override
  String get ownerId => getFieldValue(nameOwnerId).toString();
  BusinessProcess get owner => getReferent<BusinessProcess>(nameOwnerId);
  Future<BusinessProcess> ownerAsync() async {
   return await getReferentAsync<BusinessProcess>(nameOwnerId);
  }

  @override
  set ownerId(String value) => setFieldValue(nameOwnerId, value);
  set owner(BusinessProcess value) =>
    setFieldValue(nameOwnerId, value.id);

  /// НачальныйСтатус
  String get statusFromId => getFieldValue(nameStatusFromId).toString();
  TaskStatus get statusFrom => getReferent<TaskStatus>(nameStatusFromId);
  Future<TaskStatus> statusFromAsync() async {
   return await getReferentAsync<TaskStatus>(nameStatusFromId);
  }

  set statusFromId(String value) => setFieldValue(nameStatusFromId, value);
  set statusFrom(TaskStatus value) =>
    setFieldValue(nameStatusFromId, value.id);

  /// КонечныйСтатус
  String get statusToId => getFieldValue(nameStatusToId).toString();
  TaskStatus get statusTo => getReferent<TaskStatus>(nameStatusToId);
  Future<TaskStatus> statusToAsync() async {
   return await getReferentAsync<TaskStatus>(nameStatusToId);
  }

  set statusToId(String value) => setFieldValue(nameStatusToId, value);
  set statusTo(TaskStatus value) =>
    setFieldValue(nameStatusToId, value.id);

  /// РольПользователя
  String get userRoleId => getFieldValue(nameUserRoleId).toString();
  UserRole get userRole => getReferent<UserRole>(nameUserRoleId);
  Future<UserRole> userRoleAsync() async {
   return await getReferentAsync<UserRole>(nameUserRoleId);
  }

  set userRoleId(String value) => setFieldValue(nameUserRoleId, value);
  set userRole(UserRole value) =>
    setFieldValue(nameUserRoleId, value.id);

  @override
  String get apiRequestItems {
    return '/Data/BusinessProcessTransitionTable';
  }
}
