//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// НастройкиУведомлений
class UserNotificationSettingsGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameName = 'name';
  static const nameUserAccountId = 'userAccountId';
  static const nameProjectId = 'projectId';
  static const nameNotifyNewTasks = 'notifyNewTasks';
  static const nameNotifyEditedTasks = 'notifyEditedTasks';
  static const nameNotifyNewTasksInProjects = 'notifyNewTasksInProjects';
  static const nameNotifyEditedTasksInProjects = 'notifyEditedTasksInProjects';
  static const nameStatusTable = 'statusTable';

  static final Map<String, String> fieldNameDict = {
    nameName: 'Наименование',
  };

  @override
  String get typeName => 'UserNotificationSettings';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataStringField(nameName), primaryKey: false);
    addField(NsgDataReferenceField<UserAccount>(nameUserAccountId), primaryKey: false);
    addField(NsgDataReferenceField<ProjectItem>(nameProjectId), primaryKey: false);
    addField(NsgDataBoolField(nameNotifyNewTasks), primaryKey: false);
    addField(NsgDataBoolField(nameNotifyEditedTasks), primaryKey: false);
    addField(NsgDataBoolField(nameNotifyNewTasksInProjects), primaryKey: false);
    addField(NsgDataBoolField(nameNotifyEditedTasksInProjects), primaryKey: false);
    addField(NsgDataReferenceListField<UserNotificationSettingsStatusTable>(nameStatusTable), primaryKey: false);
    fieldList.fields[nameName]?.presentation = 'Наименование';
  }

  @override
  String toString() => name;

  @override
  bool get createOnServer => true;

  @override
  NsgDataItem getNewObject() => UserNotificationSettings();

  /// Guid - идентификатор объета
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// Наименование
  String get name => getFieldValue(nameName).toString();

  set name(String value) => setFieldValue(nameName, value);

  /// АккаунтПользователя
  String get userAccountId => getFieldValue(nameUserAccountId).toString();
  UserAccount get userAccount => getReferent<UserAccount>(nameUserAccountId);
  Future<UserAccount> userAccountAsync() async {
   return await getReferentAsync<UserAccount>(nameUserAccountId);
  }

  set userAccountId(String value) => setFieldValue(nameUserAccountId, value);
  set userAccount(UserAccount value) =>
    setFieldValue(nameUserAccountId, value.id);

  /// Проект
  String get projectId => getFieldValue(nameProjectId).toString();
  ProjectItem get project => getReferent<ProjectItem>(nameProjectId);
  Future<ProjectItem> projectAsync() async {
   return await getReferentAsync<ProjectItem>(nameProjectId);
  }

  set projectId(String value) => setFieldValue(nameProjectId, value);
  set project(ProjectItem value) =>
    setFieldValue(nameProjectId, value.id);

  /// УведомлятьОНовыхЗадачах
  bool get notifyNewTasks => getFieldValue(nameNotifyNewTasks) as bool;

  set notifyNewTasks(bool value) => setFieldValue(nameNotifyNewTasks, value);

  /// УведомлятьОбИзмененияхЗадач
  bool get notifyEditedTasks => getFieldValue(nameNotifyEditedTasks) as bool;

  set notifyEditedTasks(bool value) => setFieldValue(nameNotifyEditedTasks, value);

  /// УведомлятьОНовыхЗадачахВПроектах
  bool get notifyNewTasksInProjects => getFieldValue(nameNotifyNewTasksInProjects) as bool;

  set notifyNewTasksInProjects(bool value) => setFieldValue(nameNotifyNewTasksInProjects, value);

  /// УведомлятьОбИзмененияхЗадачВПроектах
  bool get notifyEditedTasksInProjects => getFieldValue(nameNotifyEditedTasksInProjects) as bool;

  set notifyEditedTasksInProjects(bool value) => setFieldValue(nameNotifyEditedTasksInProjects, value);

  /// ТаблицаСтатусы
  NsgDataTable<UserNotificationSettingsStatusTable> get statusTable => NsgDataTable<UserNotificationSettingsStatusTable>(owner: this, fieldName: nameStatusTable);

  @override
  String get apiRequestItems {
    return '/Data/UserNotificationSettings';
  }
}
