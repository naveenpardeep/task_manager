//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// КомментарийКЗадаче
class TaskCommentGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameOwnerId = 'ownerId';
  static const nameText = 'text';
  static const nameMainCommentId = 'mainCommentId';
  static const nameDate = 'date';
  static const nameAuthorId = 'authorId';
  static const nameProjectId = 'projectId';
  static const nameOrganizationId = 'organizationId';

  static final Map<String, String> fieldNameDict = {
    nameText: 'Текст',
    nameDate: 'Дата документа',
  };

  @override
  String get typeName => 'TaskComment';

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataReferenceField<TaskDoc>(nameOwnerId), primaryKey: false);
    addField(NsgDataStringField(nameText), primaryKey: false);
    addField(NsgDataReferenceField<TaskComment>(nameMainCommentId), primaryKey: false);
    addField(NsgDataDateField(nameDate), primaryKey: false);
    addField(NsgDataReferenceField<UserAccount>(nameAuthorId), primaryKey: false);
    addField(NsgDataReferenceField<ProjectItem>(nameProjectId), primaryKey: false);
    addField(NsgDataReferenceField<OrganizationItem>(nameOrganizationId), primaryKey: false);
    fieldList.fields[nameText]?.presentation = 'Текст';
    fieldList.fields[nameDate]?.presentation = 'Дата документа';
  }

  @override
  NsgDataItem getNewObject() => TaskComment();

  /// Guid - идентификатор объета
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// ДокументОснование
  @override
  String get ownerId => getFieldValue(nameOwnerId).toString();
  TaskDoc get owner => getReferent<TaskDoc>(nameOwnerId);
  Future<TaskDoc> ownerAsync() async {
   return await getReferentAsync<TaskDoc>(nameOwnerId);
  }

  @override
  set ownerId(String value) => setFieldValue(nameOwnerId, value);
  set owner(TaskDoc value) =>
    setFieldValue(nameOwnerId, value.id);

  /// Комментарий
  String get text => getFieldValue(nameText).toString();

  set text(String value) => setFieldValue(nameText, value);

  /// ОсновнойКомментарий
  String get mainCommentId => getFieldValue(nameMainCommentId).toString();
  TaskComment get mainComment => getReferent<TaskComment>(nameMainCommentId);
  Future<TaskComment> mainCommentAsync() async {
   return await getReferentAsync<TaskComment>(nameMainCommentId);
  }

  set mainCommentId(String value) => setFieldValue(nameMainCommentId, value);
  set mainComment(TaskComment value) =>
    setFieldValue(nameMainCommentId, value.id);

  /// ДатаДокумента
  DateTime get date => getFieldValue(nameDate) as DateTime;

  set date(DateTime value) => setFieldValue(nameDate, value);

  /// Автор
  String get authorId => getFieldValue(nameAuthorId).toString();
  UserAccount get author => getReferent<UserAccount>(nameAuthorId);
  Future<UserAccount> authorAsync() async {
   return await getReferentAsync<UserAccount>(nameAuthorId);
  }

  set authorId(String value) => setFieldValue(nameAuthorId, value);
  set author(UserAccount value) =>
    setFieldValue(nameAuthorId, value.id);

  /// Проект
  String get projectId => getFieldValue(nameProjectId).toString();
  ProjectItem get project => getReferent<ProjectItem>(nameProjectId);
  Future<ProjectItem> projectAsync() async {
   return await getReferentAsync<ProjectItem>(nameProjectId);
  }

  set projectId(String value) => setFieldValue(nameProjectId, value);
  set project(ProjectItem value) =>
    setFieldValue(nameProjectId, value.id);

  /// Организация
  String get organizationId => getFieldValue(nameOrganizationId).toString();
  OrganizationItem get organization => getReferent<OrganizationItem>(nameOrganizationId);
  Future<OrganizationItem> organizationAsync() async {
   return await getReferentAsync<OrganizationItem>(nameOrganizationId);
  }

  set organizationId(String value) => setFieldValue(nameOrganizationId, value);
  set organization(OrganizationItem value) =>
    setFieldValue(nameOrganizationId, value.id);

  @override
  String get apiRequestItems {
    return '/Data/TaskComment';
  }
}
